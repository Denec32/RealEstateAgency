@using System.Security.Claims
@using RealEstateAgencyService.Models
@using RealEstateAgencyService.ViewModels

@model ListAndPhotosViewModel;
@{
    ViewData["Title"] = "Создание объявления";
}
<script src="https://code.jquery.com/jquery-3.4.0.js"></script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDVxydMVf1Hr-oNZkBCgPGFp-JXKgAFOQg&callback=initMap"></script>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Укажите дом на карте</h5>
            <div class="row">
                <div class="form-group col">
                    <div class="input-group shadow-none">
                        <input type="search" class="form-control shadow-none rounded-0 border-light" id = "findAddress" placeholder="Введите адрес..." aria-label="Search" aria-describedby="search-addon" />    
                        <button type="button" class="btn btn-dark shadow-none rounded-0" onclick = "centerMap()">Поиск</button>
                    </div> 
                    <div id="googleMap" style="width:100%;height:400px;"></div>
                </div>  
            </div>
        </div>
    </div>
@using (Html.BeginForm("PostListing", "Home", FormMethod.Post, new { enctype="multipart/form-data"}))
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Адрес</h5>
            <div class="row">
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Region, "Область")
                    @Html.TextBoxFor(m => m.Listing.Region, new { @class = "form-control", @type = "text", @required = "required", @readonly = "readonly" })
                </div>
        
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.City, "Город")
                    @Html.TextBoxFor(m => m.Listing.City, new { @class = "form-control", @type = "text", @required = "required", @readonly = "readonly" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Street, "Улица")
                    @Html.TextBoxFor(m => m.Listing.Street, new { @class = "form-control", @type = "text", @required = "required", @readonly = "readonly" })
                </div>

                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.BuildingNumber, "Номер здания")
                    @Html.TextBoxFor(m => m.Listing.BuildingNumber, new { @class = "form-control", @type = "text", @required = "required", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Параметры</h5>
            <div class="row">
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Price, "Стоимость квартиры")
                    @Html.TextBoxFor(m => m.Listing.Price, new { @class = "form-control", @type="number", @required = "required" })
                </div> 
            </div>
            <div class="row">
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Rooms, "Количество комнат")
                    @Html.TextBoxFor(m => m.Listing.Rooms, new { @class = "form-control", @type="number", @required = "required" })
                </div>
                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Space, "Площадь квартиры")
                    @Html.TextBoxFor(m => m.Listing.Space, new { @class = "form-control", @type = "number", @required = "required" })
                </div>

                <div class="form-group col">
                    @Html.LabelFor(m => m.Listing.Floor, "Этаж")
                    @Html.TextBoxFor(m => m.Listing.Floor, new { @class = "form-control", @type = "number", @required = "required" })
                </div>       
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">О Квартире</h5>
             <div class="form-floating">
                @Html.TextAreaFor(m => m.Listing.Description, new { @class = "form-control", @required = "required", @placeholder = "description" })
                @Html.LabelFor(m => m.Listing.Description, "Описание")  
            </div>
        </div>
    </div>

    <div class= "card">
            <div class= "card-body">
                <h5 class= "card-title" > Фотографии </h5>
                <div class= "container form-group col">
                    <div class= "row row-cols-4" id = "gallery" ></div>
                </div >

                <div class= "form-group col" >
                    <input name = "Photos" type = "file" class= "form-control" id = "file-input" multiple = "multiple" onchange="addPhoto()"/>
                </div>
            </div>
    </div>
    <div id = "file-inputs" hidden ></div>
    <p>
        <input class="btn btn-primary float-right" type="submit" value="Создать объявление" />
    </p>
}
@if (User.Identity is not null && User.Identity.IsAuthenticated && User.IsInRole("admin"))
{
    <button class="btn btn-dark float-righ" onclick="FillForm()">Заполнить форму</button>
}

<script>

    var api = '9f39ce43-5ffb-4983-afbd-9543d1332601';
    var map;
    var marker;

    initKeyBindings();

    document.querySelector("form").addEventListener("submit", function(e){
        if(document.getElementById("Listing_City").value == "" || document.getElementById("Listing_Street").value == "" 
        || document.getElementById("Listing_BuildingNumber").value == "" || document.getElementById("Listing_Region").value == ""){
            console.log("prevented");
            e.preventDefault(); //stop form from submitting
        }
    });

    //Инициализация карты
    function initMap(){
        map = new google.maps.Map(document.getElementById('googleMap'), {        
            zoom: 12,
            center: {lat: 55.75, lng: 37.61}
        });

        google.maps.event.addListener(map, 'click', function(event) {
            if (marker != null) { 
                marker.setMap(null);
            }
            var icon = {
                url: "https://i.imgur.com/jMQ2JIh.png",
                scaledSize: new google.maps.Size(32, 36), 
            };
            marker = new google.maps.Marker({
                position: event.latLng, 
                map: map,
                icon: icon
            });     
            //console.log(event.latLng.lat());
            //console.log(event.latLng.lng());

            var apiString = 'https://geocode-maps.yandex.ru/1.x/?apikey='+api+'&format=json&geocode=' + event.latLng.lng() + ',' + event.latLng.lat() + '';
            //console.log(apiString);

            let response = fetch(apiString).then((response) => {
                return response.json(); 
            })
            .then( (data) => {
                let str = data.response.GeoObjectCollection.featureMember;

                document.getElementById("Listing_City").value = "";
                document.getElementById("Listing_Street").value = "";
                document.getElementById("Listing_BuildingNumber").value = "";    
                document.getElementById("Listing_Region").value = "";

                for (let i = 0; i < str.length; i++)
                {     
                    let obj = str[i].GeoObject.metaDataProperty.GeocoderMetaData;
                    if (obj.kind == "house") {
                        console.log(obj.text);   
                        const address = obj.text.split(", ");
                        console.log(address);

                        if (address.length == 4) {
                            if (address[0] == "Россия") {                                
                                
                                document.getElementById("Listing_City").value = address[1];
                                document.getElementById("Listing_Street").value = address[2];
                                document.getElementById("Listing_BuildingNumber").value = address[3];    
                            }
                        }
                    }                                   
                    
                    if (obj.kind == "province" && 
                    !obj.text.includes("округ")) {
                        console.log(obj.text);
                        const address = obj.text.split(", ");
                        document.getElementById("Listing_Region").value = address[1];
                    }
                }
                console.log("");  
            })
            .then(data => obj = data);
        });
    }

    //Переместить карту к указанному адресу
    function centerMap(){
        address = document.getElementById('findAddress').value;
        address = address.replace(/\s/g, '');
        apiString = 'https://geocode-maps.yandex.ru/1.x/?apikey='+api+'&format=json&geocode=' + address;
        let response = fetch(apiString).then((response) => {
        return response.json(); })
        .then( (data) => {
            let str = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos + '';
            const myArray = str.split(" ");
            ln = parseFloat(myArray[0]);         
            la = parseFloat(myArray[1]);
            //console.log(ln);
            //console.log(la);
            map.setCenter({lat: la,  lng: ln});
            map.setZoom(18);
        })
        .then(data => obj = data);
    }

    //Добавить на представление 
    function addPhoto() {
        var files = event.target.files;
        console.log(files.length);
        for (var i = 0; i < files.length; i++)
        {
            var img = document.createElement('img');
            img.src = URL.createObjectURL(event.target.files[i]);
            img.style.padding = "8px";
            img.classList.add( "col", "rounded");

            document.getElementById('gallery').appendChild(img);
        }

    }

    //Заполнить форму тестовыми данными
    function FillForm()
    {
        document.getElementById("Listing_Rooms").value = "3";
        document.getElementById("Listing_Space").value = "40";
        document.getElementById("Listing_Floor").value = "2";
        document.getElementById("Listing_Price").value = "3000000";
    }

    //Поиск при нажатии Enter
    function initKeyBindings(){  
        $("input").on("keydown",function search(e) {
            if(e.keyCode == 13) {
                centerMap();
            }
        });
    }

</script>